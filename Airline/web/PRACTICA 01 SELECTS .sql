
DROP TABLE IF EXISTS PROVEEDURIA;
DROP TABLE IF EXISTS PROVEEDOR;
DROP TABLE IF EXISTS FORMADO;
DROP TABLE IF EXISTS MATERIAPRIMA;
DROP TABLE IF EXISTS INVENTARIO;
DROP TABLE IF EXISTS BODEGA;
DROP TABLE IF EXISTS COMPRA;
DROP TABLE IF EXISTS PRODUCTO;
DROP TABLE IF EXISTS FACTURA;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS ZONA;
DROP TABLE IF EXISTS VENDEDOR;


CREATE TABLE Vendedor (
	codigo VARCHAR(10),
    nombre VARCHAR(15),
    apellido1 VARCHAR(15),
    apellido2 VARCHAR(15),
	sexo CHAR,
	total_vendido REAL,
    comision REAL,
    CONSTRAINT pk_vendedor PRIMARY KEY (codigo)
);
INSERT INTO Vendedor VALUES ('111', 'Michael', 'Chen', 'Wang', 'M', 2500);
INSERT INTO Vendedor VALUES ('222', 'Andrey', 'Arguedas', 'Espinoza', 'M', 6000);
INSERT INTO Vendedor VALUES ('333', 'Daniela', 'Hidalgo', 'Perez', 'F', 2500);
INSERT INTO Vendedor VALUES ('444', 'Yendri', 'Solano', 'Matamoros', 'F', 6000);
INSERT INTO Vendedor VALUES ('555', 'Christian', 'Fuentes', 'Salazar', 'M', 4000);

CREATE TABLE Zona (
	codigo VARCHAR(10),
    nombre VARCHAR(15),
    CONSTRAINT pk_zona PRIMARY KEY (codigo)
);
INSERT INTO Zona VALUES (1, 'SAN JOSE');
INSERT INTO Zona VALUES (2, 'ALAJUELA');
INSERT INTO Zona VALUES (3, 'HEREDIA');

CREATE TABLE Cliente (
	cedula VARCHAR(10),
    nombre VARCHAR(15),
    apellido1 VARCHAR(15),
    apellido2 VARCHAR(15),
    descuento INT,
    total_comprado REAL,
    cod_vendedor VARCHAR(10),
    cod_zona VARCHAR(10),
    CONSTRAINT pk_cliente1 PRIMARY KEY (cedula),
    CONSTRAINT fk_cliente1 FOREIGN KEY (cod_vendedor) REFERENCES Vendedor,
    CONSTRAINT fk_cliente2 FOREIGN KEY (cod_zona) REFERENCES Zona
);
INSERT INTO CLIENTE VALUES ('AAA', 'Pedro', 'Salazar', 'Artavia', 0, 0, '111', 1);
INSERT INTO CLIENTE VALUES ('BBB', 'Mariana', 'Solano', 'Beltran', 0, 0, '111', 2);
INSERT INTO CLIENTE VALUES ('CCC', 'Cleo', 'Corrales', 'Ledezma', 0, 0, '111', 3);
INSERT INTO CLIENTE VALUES ('DDD', 'Valeria', 'Oconitrillo', 'Cascante', 0, 0, '222', 1);
INSERT INTO CLIENTE VALUES ('EEE', 'NICOLE', 'LUNA', 'ARCE', 0, 0, '222', 2);
INSERT INTO CLIENTE VALUES ('FFF', 'CARLOS', 'SOTO', 'CHEN', 0, 0, '222', 3);
INSERT INTO CLIENTE VALUES ('GGG', 'LUISA', 'GONZALEZ', 'CHAVES', 0, 0, '333', 1);
INSERT INTO CLIENTE VALUES ('HHH', 'TONY', 'SOTO', 'ZALDIVAR', 0, 0, '333', 2);
INSERT INTO CLIENTE VALUES ('III', 'LUIS', 'LOPEZ', 'TOTO', 0, 0, '333', 3);


CREATE TABLE Factura (
	numero INT,
    ced_cliente VARCHAR(10),
    fecha DATE,
    monto REAL,
    CONSTRAINT pk_factura1 PRIMARY KEY (numero),
    CONSTRAINT fk_factura1 FOREIGN KEY (ced_cliente) REFERENCES Cliente
);
INSERT INTO FACTURA VALUES (1, 'AAA', DATE '2017-02-28', 1234);
INSERT INTO FACTURA VALUES (2, 'AAA', DATE '2017-03-02', 2345);
INSERT INTO FACTURA VALUES (3, 'DDD', DATE '2017-02-13', 3456);
INSERT INTO FACTURA VALUES (4, 'EEE', DATE '2017-03-02', 4567);
INSERT INTO FACTURA VALUES (5, 'GGG', DATE '2017-03-05', 5678);
INSERT INTO FACTURA VALUES (6, 'HHH', DATE '2017-03-16', 6789);
INSERT INTO FACTURA VALUES (7, 'FFF', DATE '2017-03-19', 7890);
INSERT INTO FACTURA VALUES (8, 'III', DATE '2017-03-01', 8900);
INSERT INTO FACTURA VALUES (9, 'BBB', DATE '2017-03-17', 9000);


CREATE TABLE Producto (
    codigo VARCHAR(10),
    nombre VARCHAR(15),
    precio FLOAT,
    CONSTRAINT pk_producto1 PRIMARY KEY (codigo)
);
INSERT INTO PRODUCTO VALUES ('0001', 'HARINA', 1000);
INSERT INTO PRODUCTO VALUES ('0002', 'ARROZ', 3500);
INSERT INTO PRODUCTO VALUES ('0003', 'AVENA', 950);
INSERT INTO PRODUCTO VALUES ('0004', 'FRIJOLES', 1300);
INSERT INTO PRODUCTO VALUES ('0005', 'AGUACATE', 2000);
INSERT INTO PRODUCTO VALUES ('0006', 'MANZANAS', 2300);
INSERT INTO PRODUCTO VALUES ('0007', 'BAGGET', 550);
INSERT INTO PRODUCTO VALUES ('0008', 'CHICLES', 300);
INSERT INTO PRODUCTO VALUES ('0009', 'REPOLLO', 700);


CREATE TABLE Compra (
    num_factura INT,
    cod_producto VARCHAR(10),
    CONSTRAINT pk_compra1 PRIMARY KEY (num_factura, cod_producto),
    CONSTRAINT fk_compra1 FOREIGN KEY (num_factura) REFERENCES Factura,
    CONSTRAINT fk_compra2 FOREIGN KEY (cod_producto) REFERENCES Producto
);
INSERT INTO COMPRA VALUES (1, '0001');
INSERT INTO COMPRA VALUES (1, '0002');
INSERT INTO COMPRA VALUES (1, '0003');
INSERT INTO COMPRA VALUES (1, '0004');
INSERT INTO COMPRA VALUES (2, '0009');
INSERT INTO COMPRA VALUES (2, '0008');
INSERT INTO COMPRA VALUES (3, '0004');
INSERT INTO COMPRA VALUES (3, '0005');
INSERT INTO COMPRA VALUES (3, '0006');
INSERT INTO COMPRA VALUES (3, '0007');
INSERT INTO COMPRA VALUES (4, '0001');
INSERT INTO COMPRA VALUES (4, '0005');
INSERT INTO COMPRA VALUES (4, '0006');
INSERT INTO COMPRA VALUES (5, '0007');
INSERT INTO COMPRA VALUES (5, '0006');
INSERT INTO COMPRA VALUES (5, '0004');
INSERT INTO COMPRA VALUES (5, '0009');


CREATE TABLE Bodega (
    codigo VARCHAR(10),
    cod_zona VARCHAR(15),
    CONSTRAINT pk_bodega1 PRIMARY KEY (codigo),
    CONSTRAINT fk_bodega1 FOREIGN KEY (cod_zona) REFERENCES Zona
);
INSERT INTO BODEGA VALUES ('001', 1);
INSERT INTO BODEGA VALUES ('002', 1);
INSERT INTO BODEGA VALUES ('003', 2);
INSERT INTO BODEGA VALUES ('004', 2);
INSERT INTO BODEGA VALUES ('005', 3);
INSERT INTO BODEGA VALUES ('006', 3);


CREATE TABLE Inventario (
    cod_bodega VARCHAR(10),
    cod_producto VARCHAR(10),
    cantidad INT,
    CONSTRAINT pk_inventario1 PRIMARY KEY (cod_bodega, cod_producto),
    CONSTRAINT fk_inventario1 FOREIGN KEY (cod_bodega) REFERENCES Bodega,
    CONSTRAINT fk_inventario2 FOREIGN KEY (cod_producto) REFERENCES Producto
);
INSERT INTO INVENTARIO VALUES ('001', '0001', 20);
INSERT INTO INVENTARIO VALUES ('001', '0002', 20);
INSERT INTO INVENTARIO VALUES ('001', '0003', 20);
INSERT INTO INVENTARIO VALUES ('001', '0004', 20);
INSERT INTO INVENTARIO VALUES ('001', '0005', 20);
INSERT INTO INVENTARIO VALUES ('001', '0006', 20);
INSERT INTO INVENTARIO VALUES ('001', '0007', 20);
INSERT INTO INVENTARIO VALUES ('001', '0008', 20);
INSERT INTO INVENTARIO VALUES ('001', '0009', 20);

INSERT INTO INVENTARIO VALUES ('003', '0001', 20);
INSERT INTO INVENTARIO VALUES ('003', '0002', 20);
INSERT INTO INVENTARIO VALUES ('003', '0003', 20);
INSERT INTO INVENTARIO VALUES ('003', '0004', 20);
INSERT INTO INVENTARIO VALUES ('003', '0005', 20);
INSERT INTO INVENTARIO VALUES ('003', '0006', 20);
INSERT INTO INVENTARIO VALUES ('003', '0007', 20);
INSERT INTO INVENTARIO VALUES ('003', '0008', 20);
INSERT INTO INVENTARIO VALUES ('003', '0009', 20);

INSERT INTO INVENTARIO VALUES ('005', '0001', 20);
INSERT INTO INVENTARIO VALUES ('005', '0002', 20);
INSERT INTO INVENTARIO VALUES ('005', '0003', 20);
INSERT INTO INVENTARIO VALUES ('005', '0004', 20);
INSERT INTO INVENTARIO VALUES ('005', '0005', 20);
INSERT INTO INVENTARIO VALUES ('005', '0006', 20);
INSERT INTO INVENTARIO VALUES ('005', '0007', 20);
INSERT INTO INVENTARIO VALUES ('005', '0008', 20);
INSERT INTO INVENTARIO VALUES ('005', '0009', 20);

INSERT INTO INVENTARIO VALUES ('006', '0001', 20);
INSERT INTO INVENTARIO VALUES ('006', '0002', 20);
INSERT INTO INVENTARIO VALUES ('006', '0003', 20);
INSERT INTO INVENTARIO VALUES ('006', '0004', 20);
INSERT INTO INVENTARIO VALUES ('006', '0005', 20);
INSERT INTO INVENTARIO VALUES ('006', '0006', 20);
INSERT INTO INVENTARIO VALUES ('006', '0007', 20);
INSERT INTO INVENTARIO VALUES ('006', '0008', 20);
INSERT INTO INVENTARIO VALUES ('006', '0009', 20);



CREATE TABLE MateriaPrima (
    codigo VARCHAR(10),
    nombre VARCHAR(15),
    CONSTRAINT pk_materiaPrima1 PRIMARY KEY (codigo)
);


CREATE TABLE Formado (
    cod_producto VARCHAR(10),
    cod_materiaPrima VARCHAR(10),
    CONSTRAINT pk_formado1 PRIMARY KEY (cod_producto, cod_materiaPrima),
    CONSTRAINT fk_formado1 FOREIGN KEY (cod_producto) REFERENCES (Producto),
    CONSTRAINT fk_formado2 FOREIGN KEY (cod_materiaPrima) REFERENCES (MateriaPrima)
);
CREATE TABLE Proveedor (
    carnet VARCHAR(10),
    nombre VARCHAR(15)
    CONSTRAINT pk_proveedor1 PRIMARY KEY (carnet)
);
CREATE TABLE Proveeduria (
    cod_proveedor VARCHAR(10),
    cod_materiaPrima VARCHAR(10),
    precio REAL,
    CONSTRAINT pk_proveeduria1 PRIMARY KEY (cod_proveedor, cod_materiaPrima),
    CONSTRAINT fk_proveeduria1 FOREIGN KEY (cod_proveedor) REFERENCES (Proveedor),
    CONSTRAINT fk_proveeduria2 FOREIGN KEY (cod_materiaPrima) REFERENCES (MateriaPrima)
);


--  CONSULTAS SIMPLES
--1. dar la lista de todos los vendedores de la compania (codigo, nombre, total_vendido)
	SELECT codigo, nombre, total_vendido FROM Vendedor;
--2. dar la lista de todos los vendedores cuyo total vendido es mayor a 5000
	SELECT codigo, nombre, total_vendido FROM Vendedor WHERE total_vendido > 5000;
--3. dar la lista de todos los vendedores de genero femenino que han vendido mas de 5000
	SELECT codigo, nombre, sexo, total_vendido FROM Vendedor WHERE sexo = 'F' AND total_vendido > 5000;
--4. dar la lista de todas las facturas producidas el 01/03/2017
    SELECT * FROM FACTURA WHERE fecha = '01/03/2017';
--5. Dar la lista de todas las facturas producidas durante el primer trimestre del 2017
    SELECT * FROM FACTURA WHERE fecha <= '01/03/2017';
--6. Dar la lista de todos los productos cuyo precio de venta es mayor a $1000
    SELECT * FROM PRODUCTO WHERE PRECIO > 1000;


--  ACTUALIZACIONES SIMPLES
--1. DAR A CADA VENDEDOR UN MONTO IGUAL AL 0.10% DEL TOTAL VENDIDO
    UPDATE VENDEDOR SET COMISION = TOTAL_VENDIDO * 0.10;
--2. DAR A CADA CLIENTE UN 10% DE DESCUENTO SI SU TOTAL COMPRADO ES MAYOR A $2000
    UPDATE CLIENTE SET TOTAL_COMPRADO = TOTAL_COMPRADO * 0.90 WHERE TOTAL_COMPRADO > 2000;
--3. Actualizar el precio de venta de los art√≠culos aumentando su precio en un 10%
    UPDATE PRODUCTO SET PRECIO = PRECIO * 1.10;
--4. Actualizar la cantidad de cada producto con un 10% de su cantidad actual.
    UPDATE INVENTARIO SET CANTIDAD = CANTIDAD * 1.10;
--5. Incluir un nuevo atributo para los inventarios de todos los articulos llamado y actualicelo con 
--      un valor igual al 5% de la cantidad actual de cada producto
    ALTER TABLE INVENTARIO ADD MINIMO INT;
    UPDATE INVENTARIO SET MINIMO = CANTIDAD * 0.05;

--  FUNCIONES DE AGREGACION
--1. CALCULAR EL PROMEDIO DE VENTAS DE LOS VENDEDORES
    SELECT AVG(TOTAL_VENDIDO) FROM VENDEDOR;
--2. CALCULAR EL MONTO MAXIMO DE VENTAS POR LOS VENDEDORES
    SELECT MAX(TOTAL_VENDIDO) FROM VENDEDOR;
--3. CALCULAR EL MONTO MINIMO DE VENTAS POR LOS VENDEDORES
    SELECT MIN(TOTAL_VENDIDO) FROM VENDEDOR;
--4. CALCULAR LA RAZON ENTRE EL MONTO MINIMO Y PROMEDIO DE VENTAS DE LOS VENDEDORES
    SELECT MIN(TOTAL_VENDIDO) / AVG(TOTAL_VENDIDO) FROM VENDEDOR;
--5. CUANTOS VENDEDORES DE GENERO MASCULINO TIENE LA COMPANIA
    SELECT COUNT(SEXO) FROM VENDEDOR WHERE SEXO = 'M';
--6. CUANTOS VENDEDORES DE GENERO FEMENINO TIENE LA COMPANIA CUYO TOTAL VENDIDO ES MAYOR A 2000
    SELECT COUNT(SEXO) FROM VENDEDOR WHERE SEXO = 'F' AND TOTAL_VENDIDO > 2000;
--7. CALCULAR EL PROMEDIO DE VENTAS DE VENDEDORES DE GENERO MASCULINO TOMANDO EN CUENTA SOLO 
--      TOTALES VENDIDOS SUPERIORES A $3000
    SELECT AVG(TOTAL_VENDIDO) FROM VENDEDOR WHERE SEXO = 'M' AND TOTAL_VENDIDO > 3000;

-- CONSULTAS EN MULTIPLES TABLAS
--1. DAR LA LISTA DE TODOS LOS CLIENTES DE CADA UNO DE LOS VENDEDORES
    SELECT VENDEDOR.CODIGO, VENDEDOR.NOMBRE, CLIENTE.CEDULA, CLIENTE.NOMBRE
    FROM VENDEDOR, CLIENTE
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO;
--2. DAR LA LISTA DE TODOS LOS CLIENTES DE CADA UNO DE LOS VENDEDORES JUNTO CON SU TOTAL VENDIDO.
    SELECT VENDEDOR.CODIGO, VENDEDOR.NOMBRE, CLIENTE.CEDULA, CLIENTE.NOMBRE, VENDEDOR.TOTAL_VENDIDO
    FROM VENDEDOR, CLIENTE
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO;
--3. DAR LA LISTA DE TODOS LOS CLIENTES DEL VENDEDOR CUYO CODIGO ES 5 (333)
    SELECT CLIENTE.CEDULA, CLIENTE.NOMBRE
    FROM VENDEDOR, CLIENTE
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND CLIENTE.COD_VENDEDOR = '555';
--4. DAR LA LISTA DE TODOS LOS CLIENTES CUYO NOMBRE ES JUAN (Michael)
    SELECT CLIENTE.CEDULA, CLIENTE.NOMBRE
    FROM VENDEDOR, CLIENTE
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND VENDEDOR.NOMBRE = 'Michael';
--5. DAR LA LISTA DE TODOS LOS CLIENTES DEL VENDEDOR 'JUAN' (Michael) QUE PERTENECEN A LA ZONA 2.
    SELECT CLIENTE.CEDULA, CLIENTE.NOMBRE
    FROM VENDEDOR, CLIENTE
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND VENDEDOR.NOMBRE = 'Michael' AND CLIENTE.COD_ZONA = '2';
--6. DAR LA LISTA DE TODOS LOS CLIENTES DEL VENDEDOR 'JUAN' (Michael) QUE PERTENECE A LA ZONA 'ATLANTICA' (HEREDIA)
    SELECT CLIENTE.CEDULA, CLIENTE.NOMBRE
    FROM VENDEDOR, CLIENTE, ZONA
    WHERE CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND VENDEDOR.NOMBRE = 'Michael' AND ZONA.CODIGO = CLIENTE.COD_ZONA AND ZONA.NOMBRE = 'HEREDIA';

    SELECT nombre 
    FROM  (SELECT codigo FROM Vendedor WHERE nombre = 'Michael')alias1 , 
          (SELECT nombre,cod_vendedor FROM (SELECT nombre,cod_vendedor,cod_zona FROM cliente)alias2 , 
          (SELECT codigo FROM zona WHERE nombre = 'HEREDIA')alias3  WHERE codigo = cod_zona)alias4  
    WHERE codigo = cod_vendedor;
--7. DAR UN REPORTE DE TODAS LAS FACTURAS DE CADA CLIENTE DEL VENDEDOR 'JUAN' (Michael) (CLIENTE, FACTURA, MONTO)
    SELECT CLIENTE.NOMBRE, FACTURA.NUMERO, FACTURA.MONTO
    FROM CLIENTE, FACTURA, VENDEDOR
    WHERE FACTURA.CED_CLIENTE = CLIENTE.CEDULA AND CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND VENDEDOR.NOMBRE = 'Michael';
--8. DAR LA CANTIDAD DE FACTURAS QUE HAN PRODUCIDO TODOS LOS CLIENTES DEL VENDEDOR 'JUAN' (Michael)
    SELECT COUNT(FACTURA.NUMERO)
    FROM CLIENTE, FACTURA, VENDEDOR
    WHERE FACTURA.CED_CLIENTE = CLIENTE.CEDULA AND CLIENTE.COD_VENDEDOR = VENDEDOR.CODIGO AND VENDEDOR.NOMBRE = 'Michael';

    SELECT COUNT(*)
    FROM (SELECT numero 
          FROM (SELECT numero,ced_cliente FROM factura)alias1 , 
          (SELECT cedula FROM (SELECT codigo FROM vendedor WHERE nombre = 'Michael')alias2 , 
          (SELECT cod_vendedor,cedula FROM cliente)alias3  WHERE codigo = cod_vendedor)alias4
          WHERE ced_cliente = cedula)alias5;
    
--9. DAR LA LISTA DE TODOS LOS VENDEDORES QUE HAN VENDIDO EL PRODUCTO CUYO CODIGO ES XYZ (0001)
    SELECT VENDEDOR.NOMBRE
    FROM VENDEDOR, CLIENTE, FACTURA, COMPRA
    WHERE VENDEDOR.CODIGO = CLIENTE.COD_VENDEDOR AND CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
            AND COMPRA.COD_PRODUCTO = '0001';
--10. DAR LA LISTA DE TODOS LOS VENDEDORES QUE NO HAN VENDIDO EL PRODUCTO CUYO NOMBRE ES XYZ (0001)
    SELECT VENDEDOR.NOMBRE
    FROM VENDEDOR, CLIENTE, FACTURA, COMPRA
    WHERE VENDEDOR.CODIGO = CLIENTE.COD_VENDEDOR AND CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
    EXCEPT
    SELECT DISTINCT VENDEDOR.NOMBRE
    FROM VENDEDOR, CLIENTE, FACTURA, COMPRA
    WHERE VENDEDOR.CODIGO = CLIENTE.COD_VENDEDOR AND CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
            AND COMPRA.COD_PRODUCTO = '0001';

-- I THINK THIS ONE IS THE CORRECT ONE!!!    
    SELECT VENDEDOR.NOMBRE
    EXCEPT
    SELECT DISTINCT VENDEDOR.NOMBRE
    FROM VENDEDOR, CLIENTE, FACTURA, COMPRA
    WHERE VENDEDOR.CODIGO = CLIENTE.COD_VENDEDOR AND CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
            AND COMPRA.COD_PRODUCTO = '0001';

--ejemplo de profesor:
    SELECT A,B FROM VENDEDOR UNION SELECT A,B FROM VENDEDOR;
    --MIENTRAS LOS NUMERO DE ELEMENTOS SON IGUALES, ENTONCES SI SE PUEDE HACER LA UNION

--11. Cuales clientes compraron el producto cuyo nombre es XYZ(0001) durante el primer trimestre del 2017
    SELECT CLIENTE.NOMBRE   
    FROM CLIENTE, FACTURA, COMPRA
    WHERE CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
            AND COMPRA.COD_PRODUCTO = '0001' AND FACTURA.FECHA < '01/03/2017';

    SELECT VENDEDOR.NOMBRE
    EXCEPT
    SELECT DISTINCT VENDEDOR.NOMBRE
    FROM VENDEDOR, CLIENTE, FACTURA, COMPRA
    WHERE VENDEDOR.CODIGO = CLIENTE.COD_VENDEDOR AND CLIENTE.CEDULA = FACTURA.CED_CLIENTE AND FACTURA.NUMERO = COMPRA.NUM_FACTURA
            AND COMPRA.COD_PRODUCTO = '0001' AND FACTURA.FECHA < '01/04/2017';


R1 ‚Üê Œ†{FACTURA.NUMERO, FACTURA.CED_CLIENTE} (œÉ{FACTURA.FECHA < '01/04/2017'}(FACTURA))
R2 ‚Üê Œ†{COMPRA.NUM_FACTURA, COMPRA.COD_PRODUCTO} (œÉ{COMPRA.COD_PRODUCTO = '0001'}(COMPRA))
R3 ‚Üê Œ†{CED_CLIENTE} (œÉ{NUMERO = NUM_FACTURA}(R1 √ó R2))
R4 ‚Üê Œ†{CEDULA, COD_VENDEDOR}(CLIENTE) 
R5 ‚Üê Œ†{COD_VENDEDOR}(œÉ{CED_CLIENTE = CEDULA}(R4 √ó R3)) 
R6 ‚Üê Œ†{CODIGO, NOMBRE}(VENDEDOR)
R7 ‚Üê Œ†{NOMBRE}(œÉ{COD_VENDEDOR = CODIGO}(R5 x R6))
R8